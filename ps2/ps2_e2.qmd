---
title: "20295 Microeconometrics - Problem Set 2"
author: "Stefano Graziosi"
format: html
knitr:
  opts_knit:
    root.dir: "/Users/stefanograziosi/Documents/GitHub/20295-microeconometrics-ps/ps2/ps2_e2"
---

# Exercise 2

------------------------------------------------------------------------

We will now use causal forests to assess if there’s any evidence of heterogeneous treatment effects of unilateral divorce laws on divorce rates. The original data set used in Wolfers (2006) did not provide a rich set of variables for this analysis, so we’ll use an expanded version based on simulated observations (the data set is provided on Blackboard as expanded data.csv. These will depict a data set where you would have access to county level observations in each of the states of the original sample, including several characteristics of the population in each county. A table with all variables in the updated data set and their description is provided below.

**Hint**

Wolfers (2006) did not provide a rich set of variables for this analysis, so we’ll use an expanded version based on simulated observations (the data set is provided on Black- board as expanded data.csv. These will depict a data set where you would have access to county level observations in each of the states of the original sample, includ- ing several characteristics of the population in each county. A table with all variables in the updated data set and their description is provided below.

**Setup**

```{r}
#| label: Load the relevant libraries

# For this assignment specifically
library(grf)

  # Necessary packages for quantmod
  library(zoo)
  library(xts)
library(quantmod)

# For fancy plots
library(ggthemes)
  # Necessary packages for viridis
  library(viridisLite)
library(viridis)
library(gridExtra)

# Packages related to tidyverse, for data manipulation
library(tidyverse) # includes (lubridate), (dplyr), (ggplot2), (tidyr), (tidyselect)
library(tinytex)
library(fastDummies)

# To handle time changes
library(timechange)

# To solve conflicts
library(conflicted)
conflicts_prefer(dplyr::filter)

# IMPORTANT: run twice to solve the errors
```

```{r}
data_url <- "https://raw.githubusercontent.com/stfgrz/20295-microeconometrics-ps/5c6aebedcdd74f0e85b270c2d25c9e0c9f5501aa/ps2/ps2_data/expanded_data.csv"
df <- read.csv(data_url)

#Define `urbanization` as a factor (dummy)
df$urbanization_dummy <- as.numeric(df$urbanization == "Rural")

# Here, 0 = `Urban` and 1 = `Rural`

#Define `st` as a factor
df$state_id <- as.numeric(as.factor(df$st))

# Here, the state IDs are assigned in alphabetical order
```

## Question 2(a)

Structure your data set accordingly to assess whether the introduction of the unilateral divorce law had an effect on divorce rates for our sample at the county level. Estimate a causal forest using the causal forest command from package grf.

```{r}
#| label: Create variable names

# The outcome Y (must be a numeric vector with no NAs).
outcome <- df$div_rate_sim

# The treatment assignment W (must be a binary or real numeric vector with no NAs).
df$treatment <- ifelse(df$year >= df$lfdivlaw, 1, 0)
treat <- df$treatment

# The covariates X used in the causal regression.
covariates <- subset(df, 
                     select = c("education_rate",
                            "childcare_availability",
                            "unemployment_rate",
                            "median_income",
                            "urbanization_dummy",
                            "marriage_rate",
                            "religious_adherence",
                            "alcohol_consumption",
                            "domestic_violence_rate",
                            "women_labor_force_participation",
                            "crime_rate",
                            "social_services_spending",
                            "state_id",
                            "county_id")
                     )
```

```{r}
#| label: Estimating the causal forest

# Fit the causal forest
tau.forest <- causal_forest(covariates,
                    outcome, 
                    treat
                    )

# Estimate the average treatment effect (ATE)
cate <- average_treatment_effect(tau.forest, 
                                target.sample = "overlap")
cate

ci_lower <- cate["estimate"] - 1.96 * cate["std.err"]
ci_upper <- cate["estimate"] + 1.96 * cate["std.err"]
cat("ATE:", cate["estimate"], 
    "\nStd. Error:", cate["std.err"],
    "\n95% CI: [", ci_lower, ", ", ci_upper, "]\n")

```

```{r}
varimp <- variable_importance(tau.forest)
ranked.vars <- order(varimp, decreasing = TRUE)

colnames(covariates)[ranked.vars[1:5]]
```

The programme suggests us that there are some issues with overlap, so we will follow the standard procedure suggested on the package documentation:

> If the output of the causal_forest method doesn’t pass a sanity check based on your knowledge of the data, it may be worth checking whether the overlap assumption is violated. In order for conditional average treatment effects to be properly identified, a dataset’s propensity scores must be bounded away from 0 and 1. A simple way to validate this assumption is to calculate the propensity scores by regressing the treatment assignments W against X, and examining the out-of-bag predictions. Concretely, you can perform the following steps:

```{r}
propensity.forest = regression_forest(covariates, treat)
W.hat = predict(propensity.forest)$predictions
hist(W.hat, xlab = "propensity score")
```

> If there is strong overlap, the histogram will be concentrated away from 0 and 1. If the data is instead concentrated at the extremes, the overlap assumption likely does not hold.

Our histogram is indeed concentrated towards zero, suggesting that overlap is indeed an issue in our case.

> For further discussion of the overlap assumption, please see Imbens and Rubin (2015). In practice, this assumption is often violated due to incorrect modeling decision: for example one covariate may be a deterministic indicator that the example received treatment.

In order to account for this, we decide to include `target.sample = "overlap"` when calculating the CATE.

1.  **What is the estimated averate treatment effect in this instance?**

ate "estimate" gives the point estimate, while ate "std.err" gives the standard error

2.  **Is it consistent with your answer in exercise 1.c?**

## Question 2(b)

Now make an analysis of the causal forest results regarding potential heterogeneous treatment effects. Check the results on

### 2(b)(i) The Best Linear Projection

```{r}
blp <- best_linear_projection(tau.forest, covariates[ranked.vars[1:5]])
print(blp)
```

> **What is being performed**: The Best Linear Projection involves regressing the estimated conditional average treatment effects (CATEs) on the covariates. This approach checks whether the heterogeneity captured by the forest is systematically related to the observed covariates. If the coefficients (or the overall fit) are statistically significant, it provides evidence that the treatment effects vary in a predictable way with these covariates.

Interpretation Guidelines:

-   The output will typically show a coefficient (or a set of coefficients) along with standard errors and p-values.

-   A statistically significant coefficient indicates that a change in the corresponding covariate is associated with a systematic change in the treatment effect.

-   If the overall fit is good, it supports the notion that heterogeneity in treatment effects is predictable from the observed characteristics.

### 2(b)(ii) The Targeting Operator Characteristic

#### Stefano's version

```{r}
full_predict <- predict(tau.forest)

cate <- full_predict$predictions

# Sorting CATE in descending order
order_idx <- order(cate, decreasing = TRUE)
cate_sorted <- cate[order_idx]

# Computing cumulative gain
cumulative_gain <- cumsum(cate_sorted)
normalized_gain <- cumulative_gain / sum(cate_sorted)

population_fraction <- seq_along(cate_sorted) / length(cate_sorted)
```

```{r}

toc_data <- data.frame(
  population_fraction = population_fraction,
  normalized_gain = normalized_gain
)

# Plot the TOC curve with ggplot2
ggplot(toc_data, aes(x = population_fraction, y = normalized_gain)) +
  geom_line() +
  geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "steelblue") +
  labs(title = "Targeting Operator Characteristic (TOC)",
       x = "Fraction of Population Targeted",
       y = "Normalized Cumulative Gain") +
  theme_minimal()
```

Interpretation Guidelines:

-   The 45° line represents the baseline (no targeting benefit).

-   A TOC curve that substantially lies above this line indicates that prioritizing units based on the estimated CATE would yield a higher cumulative gain in treatment effect.

> **What is being performed**: The Targeting Operator Characteristic (TOC) evaluates the performance of the causal forest in terms of how well the estimated treatment effects can be used for targeting. Essentially, it plots the cumulative gain (in terms of treatment effect) that one would obtain by targeting the population in order of the predicted CATEs. A TOC curve that lies substantially above the 45° line (line of equality) indicates that the forest is successful in distinguishing between units with higher versus lower treatment effects.

#### Website's version

```{r}

```

### 2(b)(iii) Distribution of CATEs

> Plot the distribution of CATEs throughout the distribution of the variables you believe could drive heterogeneity (if you’ll report heterogeneous treatment effects, include graphs for its drivers).

```{r}
cate_data <- data.frame(cate = cate)
ggplot(cate_data, aes(x = cate)) +
  geom_histogram(bins = 30, fill = "steelblue", color = "darkgray") +
  labs(title = "Distribution of Estimated CATEs",
       x = "Estimated CATE",
       y = "Frequency") +
  theme_minimal()
```

### i. Education Rate

```{r}
rate.educ.rate <- rank_average_treatment_effect(
  tau.forest,
  covariates$education_rate,
  subset = !is.na(covariates$education_rate) # Ignore missing X-values
  )
plot(rate.educ.rate, xlab = "Treated fraction", ylab = "Increase in divorce rates", main = "TOC: By increasing education rate")

rate.educ.rate
```

```{r}
#| label: Heterogeneity Driver: education_rate

scatter_data <- data.frame(
  driver = df$education_rate,
  cate = cate
)

ggplot(scatter_data, aes(x = driver, y = cate, color = factor(treat))) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "loess", se = TRUE, color = "orange") +
  geom_smooth(aes(group = factor(treat)), method = "loess", se = TRUE) +
  labs(title = "Relationship between Driver and Estimated Treatment Effects",
       x = "Driver",
       y = "Estimated CATE",
       color = "Treatment Group") +
  theme_minimal()
```

### ii. Religious Adherence

```{r}
rate.rel.ad <- rank_average_treatment_effect(
  tau.forest,
  -1 * covariates$religious_adherence, # Multiply by -1 to order by decreasing index
  subset = !is.na(covariates$religious_adherence) # Ignore missing X-values
  )
plot(rate.rel.ad, xlab = "Treated fraction", ylab = "Increase in divorce rates", main = "TOC: By increasing religious adherence")

rate.rel.ad
```

```{r}
#| label: Heterogeneity Driver: religious_adherence

scatter_data <- data.frame(
  driver = df$religious_adherence,
  cate = cate
)

ggplot(scatter_data, aes(x = driver, y = cate, color = factor(treat))) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "loess", se = TRUE, color = "orange") +
  geom_smooth(aes(group = factor(treat)), method = "loess", se = TRUE) +
  labs(title = "Relationship between Driver and Estimated Treatment Effects",
       x = "Driver",
       y = "Estimated CATE",
       color = "Treatment Group") +
  theme_minimal()
```

### iii. Women Labour Force Participation

```{r}
rate.wlfp <- rank_average_treatment_effect(
  tau.forest,
  covariates$women_labor_force_participation, # Multiply by -1 to order by decreasing index
  subset = !is.na(covariates$women_labor_force_participation) # Ignore missing X-values
  )
plot(rate.wlfp, xlab = "Treated fraction", ylab = "Increase in divorce rates", main = "TOC: By increasing women labour force participation")
```

```{r}
#| label: Heterogeneity Driver: women_labor_force_participation

scatter_data <- data.frame(
  driver = df$women_labor_force_participation,
  cate = cate
)

ggplot(scatter_data, aes(x = driver, y = cate, color = factor(treat))) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "loess", se = TRUE, color = "orange") +
  geom_smooth(aes(group = factor(treat)), method = "loess", se = TRUE) +
  labs(title = "Relationship between Driver and Estimated Treatment Effects",
       x = "Driver",
       y = "Estimated CATE",
       color = "Treatment Group") +
  theme_minimal()
```

Explain what is being performed in each point and interpret your output.

## Question 2(c)

> Discuss your results. Did you find any evidence of heterogeneous treatment effects? Justify your answer based on your output in the previous items.

## Question 2(d)

> An important aspect in the implementation of causal forests is the use of ”honest trees”, as explained in section 2.4 of Wager and Athey (2017). Explain this procedure and why it is important for our estimation of CATEs. Rerun your analysis without ”honest trees” by selecting `honesty = FALSE`.

### i. Honest Trees Explanations

Inserisci sezione dove spieghi cosa sono gli honest trees

### ii. Comparison of Results

```{r}
#| label: Estimating the causal forest

# Fit the causal forest
tau.forest.hf <- causal_forest(covariates,
                    outcome, 
                    treat,
                    honesty = FALSE
                    )

# Estimate the average treatment effect (ATE)
cate <- average_treatment_effect(tau.forest.hf, 
                                target.sample = "overlap")
cate

ci_lower <- cate["estimate"] - 1.96 * cate["std.err"]
ci_upper <- cate["estimate"] + 1.96 * cate["std.err"]
cat("ATE:", cate["estimate"], 
    "\nStd. Error:", cate["std.err"],
    "\n95% CI: [", ci_lower, ", ", ci_upper, "]\n")

```



1.  **Is your average treatment effect the same?**



2.  **When would you expect this to not be the case?**
